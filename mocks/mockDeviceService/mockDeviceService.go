// Code generated by MockGen. DO NOT EDIT.
// Source: challenge/serivce (interfaces: DeviceService)

// Package mockDeviceService is a generated GoMock package.
package mockDeviceService

import (
	domain "challenge/domain"
	errors "challenge/lib/errors"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockDeviceService is a mock of DeviceService interface.
type MockDeviceService struct {
	ctrl     *gomock.Controller
	recorder *MockDeviceServiceMockRecorder
}

// MockDeviceServiceMockRecorder is the mock recorder for MockDeviceService.
type MockDeviceServiceMockRecorder struct {
	mock *MockDeviceService
}

// NewMockDeviceService creates a new mock instance.
func NewMockDeviceService(ctrl *gomock.Controller) *MockDeviceService {
	mock := &MockDeviceService{ctrl: ctrl}
	mock.recorder = &MockDeviceServiceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockDeviceService) EXPECT() *MockDeviceServiceMockRecorder {
	return m.recorder
}

// CreateDevice mocks base method.
func (m *MockDeviceService) CreateDevice(arg0 *domain.Device) (*domain.Device, *errors.AppError) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CreateDevice", arg0)
	ret0, _ := ret[0].(*domain.Device)
	ret1, _ := ret[1].(*errors.AppError)
	return ret0, ret1
}

// CreateDevice indicates an expected call of CreateDevice.
func (mr *MockDeviceServiceMockRecorder) CreateDevice(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreateDevice", reflect.TypeOf((*MockDeviceService)(nil).CreateDevice), arg0)
}

// GetDevice mocks base method.
func (m *MockDeviceService) GetDevice(arg0 string) (*domain.Device, *errors.AppError) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetDevice", arg0)
	ret0, _ := ret[0].(*domain.Device)
	ret1, _ := ret[1].(*errors.AppError)
	return ret0, ret1
}

// GetDevice indicates an expected call of GetDevice.
func (mr *MockDeviceServiceMockRecorder) GetDevice(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetDevice", reflect.TypeOf((*MockDeviceService)(nil).GetDevice), arg0)
}
